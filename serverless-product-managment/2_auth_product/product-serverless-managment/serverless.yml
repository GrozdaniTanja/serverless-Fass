# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: feri2
# "service" is the name of this project. This will also be added to your AWS resource names.
service: product-serverless-managment

provider:
  name: aws
  runtime: nodejs20.x
region: us-east-1
  environment:
    PRODUCTS_TABLE: ${self:service}-products
    JWT_SECRET: your_jwt_secret_key # Replace with a secure key

plugins:
  - serverless-offline
  - serverless-localstack

custom:
  localstack:
    stages:
      - local

functions:
  createProduct:
    handler: handler.createProduct
    products:
      - http:
          path: /products
          method: post
          cors: true

  getProducts:
    handler: handler.getProducts
    products:
      - http:
          path: /products
          method: get
          cors: true

  getProduct:
    handler: handler.getProduct
    products:
      - http:
          path: /products/{id}
          method: get
          cors: true

  updateProduct:
    handler: handler.updateProduct
    products:
      - http:
          path: /products/{id}
          method: put
          cors: true

  deleteProduct:
    handler: handler.deleteProduct
    products:
      - http:
          path: /products/{id}
          method: delete
          cors: true

  sendProductSummary:
    handler: handler.sendProductSummary
    products:
      - schedule:
          rate: rate(1 day)

  hourlyTask:
    handler: handler.hourlyTask
    products:
      - schedule:
          rate: rate(1 hour)

  handleSnsNotification:
    handler: handler.handleSnsNotification
    products:
      - sns: productNotification

resources:
  Resources:
    ProductsDynanoDBTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.PRODUCTS_TABLE}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

    ProductNotificationTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: productNotification